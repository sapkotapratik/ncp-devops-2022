name: 'Azure OIDC CHECK'
 
on:
  push:
    branches:
    - main
  pull_request:
  
permissions:
      id-token: write
      issues: write
      pull-requests: write
      contents: read
 
jobs:
  
  terraform:

    name: 'Terraform'
    #Checking if repository name is correct.
    
    if: github.repository == 'sapkotapratik/ncp-devops-2022'
#     env:
#       ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#       ARM_CLIENT_SECRET: ${{ steps.myGetSecretAction.outputs.ga-secret }}
#       ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#       ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    
    environment: prod
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
   

    defaults:
      run:
        shell: bash
 
    steps:

    
      
 
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      
   # Log into Azure with OIDC integration
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

        
    - name: 'Run az commands'
      run: |
        az account show
    
    - uses: Azure/get-keyvault-secrets@v1
      with: 
        keyvault: "github-certificate"
        secrets: 'ga-secret'
      id: myGetSecretAction
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
#       with:
#          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#          ARM_CLIENT_SECRET: ${{ steps.myGetSecretAction.outputs.ga-secret }}
#          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      
      
    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Validate
      run: terraform validate
      
 

      
    - name: terraform-plan
      run: terraform plan
#       continue-on-error: true
#       env:
#        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#        ARM_CLIENT_SECRET: ${{ steps.myGetSecretAction.outputs.ga-secret }}
#        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
  

    - name: Terraform Apply
      run: terraform apply -auto-approve
#       continue-on-error: true
#       env:
#        ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
#        ARM_CLIENT_SECRET: ${{ steps.myGetSecretAction.outputs.ga-secret }}
#        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#        ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
      
